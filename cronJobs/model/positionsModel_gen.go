// Code generated by goctl. DO NOT EDIT!

package model

import (
	"strings"
	"time"

	"github.com/zeromicro/go-zero/core/stores/builder"
	"github.com/zeromicro/go-zero/core/stores/sqlx"
	"github.com/zeromicro/go-zero/core/stringx"
)

var (
	positionsFieldNames        = builder.RawFieldNames(&Positions{})
	positionsRowsExpectAutoSet = strings.Join(stringx.Remove(positionsFieldNames, "`id`", "`create_time`", "`update_time`", "`create_at`", "`update_at`"), ",")
)

type (
	defaultPositionsModel struct {
		conn  sqlx.SqlConn
		table string
	}

	Positions struct {
		Id                         int64     `db:"id"`
		AccountId                  int64     `db:"account_id"`
		AdvertiserId               string    `db:"advertiser_id"`                 // 广告主账户ID
		CreativeSizeId             string    `db:"creative_size_id"`              // 版位ID
		CreativeSizeNameDsp        string    `db:"creative_size_name_dsp"`        // 版位名称
		CreativeSizeDescription    string    `db:"creative_size_description"`     // 版位描述
		Category                   string    `db:"category"`                      //
		SupportProductType         string    `db:"support_product_type"`          // 支持的推广产品
		SupportObjectiveType       string    `db:"support_objective_type"`        //
		IsSupportTimePeriod        string    `db:"is_support_time_period"`        // 是否支持选择投放时段
		IsSupportMultipleCreatives string    `db:"is_support_multiple_creatives"` // 是否支持多创意
		SupportPriceType           string    `db:"support_price_type"`            // 付费方式
		LastPullTime               time.Time `db:"last_pull_time"`                // 最后拉取时间
	}
)

func newPositionsModel(conn sqlx.SqlConn) *defaultPositionsModel {
	return &defaultPositionsModel{
		conn:  conn,
		table: "`positions`",
	}
}

func (m *defaultPositionsModel) tableName() string {
	return m.table
}
