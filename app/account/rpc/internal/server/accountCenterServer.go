// Code generated by goctl. DO NOT EDIT!
// Source: account.proto

package server

import (
	"context"

	"business/app/account/rpc/account"
	"business/app/account/rpc/internal/logic"
	"business/app/account/rpc/internal/svc"
)

type AccountCenterServer struct {
	svcCtx *svc.ServiceContext
	account.UnimplementedAccountCenterServer
}

func NewAccountCenterServer(svcCtx *svc.ServiceContext) *AccountCenterServer {
	return &AccountCenterServer{
		svcCtx: svcCtx,
	}
}

func (s *AccountCenterServer) ActList(ctx context.Context, in *account.ActListReq) (*account.ActListResp, error) {
	l := logic.NewActListLogic(ctx, s.svcCtx)
	return l.ActList(in)
}

func (s *AccountCenterServer) ActCreate(ctx context.Context, in *account.ActCreateReq) (*account.BaseResp, error) {
	l := logic.NewActCreateLogic(ctx, s.svcCtx)
	return l.ActCreate(in)
}

func (s *AccountCenterServer) ActUpdate(ctx context.Context, in *account.ActUpdateReq) (*account.BaseResp, error) {
	l := logic.NewActUpdateLogic(ctx, s.svcCtx)
	return l.ActUpdate(in)
}

func (s *AccountCenterServer) ActInfo(ctx context.Context, in *account.ActInfoReq) (*account.ActInfoResp, error) {
	l := logic.NewActInfoLogic(ctx, s.svcCtx)
	return l.ActInfo(in)
}

func (s *AccountCenterServer) ActClientIdsCreate(ctx context.Context, in *account.ActClientIdCreateReq) (*account.BaseResp, error) {
	l := logic.NewActClientIdsCreateLogic(ctx, s.svcCtx)
	return l.ActClientIdsCreate(in)
}

func (s *AccountCenterServer) ActClientIdsUpdate(ctx context.Context, in *account.ActClientIdUpdateReq) (*account.BaseResp, error) {
	l := logic.NewActClientIdsUpdateLogic(ctx, s.svcCtx)
	return l.ActClientIdsUpdate(in)
}

func (s *AccountCenterServer) GetToken(ctx context.Context, in *account.GetTokenReq) (*account.TokenInfo, error) {
	l := logic.NewGetTokenLogic(ctx, s.svcCtx)
	return l.GetToken(in)
}

func (s *AccountCenterServer) SetToken(ctx context.Context, in *account.TokenInfo) (*account.BaseResp, error) {
	l := logic.NewSetTokenLogic(ctx, s.svcCtx)
	return l.SetToken(in)
}
