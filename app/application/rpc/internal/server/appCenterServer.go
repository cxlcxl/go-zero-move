// Code generated by goctl. DO NOT EDIT!
// Source: app.proto

package server

import (
	"context"

	"business/app/application/rpc/apps"
	"business/app/application/rpc/internal/logic"
	"business/app/application/rpc/internal/svc"
)

type AppCenterServer struct {
	svcCtx *svc.ServiceContext
	apps.UnimplementedAppCenterServer
}

func NewAppCenterServer(svcCtx *svc.ServiceContext) *AppCenterServer {
	return &AppCenterServer{
		svcCtx: svcCtx,
	}
}

func (s *AppCenterServer) CreateApp(ctx context.Context, in *apps.CreateAppReq) (*apps.BaseResp, error) {
	l := logic.NewCreateAppLogic(ctx, s.svcCtx)
	return l.CreateApp(in)
}

func (s *AppCenterServer) UpdateApp(ctx context.Context, in *apps.AppInfo) (*apps.BaseResp, error) {
	l := logic.NewUpdateAppLogic(ctx, s.svcCtx)
	return l.UpdateApp(in)
}

func (s *AppCenterServer) GetAppInfo(ctx context.Context, in *apps.AppInfoReq) (*apps.AppInfo, error) {
	l := logic.NewGetAppInfoLogic(ctx, s.svcCtx)
	return l.GetAppInfo(in)
}

func (s *AppCenterServer) GetAppInfoByAppId(ctx context.Context, in *apps.GetByAppIdReq) (*apps.AppInfo, error) {
	l := logic.NewGetAppInfoByAppIdLogic(ctx, s.svcCtx)
	return l.GetAppInfoByAppId(in)
}

func (s *AppCenterServer) AppList(ctx context.Context, in *apps.AppListReq) (*apps.AppListResp, error) {
	l := logic.NewAppListLogic(ctx, s.svcCtx)
	return l.AppList(in)
}

func (s *AppCenterServer) GetAppsByIds(ctx context.Context, in *apps.GetByIdsReq) (*apps.AppsResp, error) {
	l := logic.NewGetAppsByIdsLogic(ctx, s.svcCtx)
	return l.GetAppsByIds(in)
}

func (s *AppCenterServer) GetAppsByAppName(ctx context.Context, in *apps.GetByAppNameReq) (*apps.AppsResp, error) {
	l := logic.NewGetAppsByAppNameLogic(ctx, s.svcCtx)
	return l.GetAppsByAppName(in)
}

func (s *AppCenterServer) GetAppsByAppIds(ctx context.Context, in *apps.GetByAppIdsReq) (*apps.AppsResp, error) {
	l := logic.NewGetAppsByAppIdsLogic(ctx, s.svcCtx)
	return l.GetAppsByAppIds(in)
}
