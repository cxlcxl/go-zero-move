// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: pb/marketing.proto

package marketing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CampaignCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignId   string `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	CampaignName string `protobuf:"bytes,2,opt,name=campaign_name,json=campaignName,proto3" json:"campaign_name,omitempty"`
	ProductType  string `protobuf:"bytes,3,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	DailyBudget  int64  `protobuf:"varint,4,opt,name=daily_budget,json=dailyBudget,proto3" json:"daily_budget,omitempty"`
	AccountId    int64  `protobuf:"varint,5,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CampaignType string `protobuf:"bytes,6,opt,name=campaign_type,json=campaignType,proto3" json:"campaign_type,omitempty"`
	SyncFlow     string `protobuf:"bytes,7,opt,name=sync_flow,json=syncFlow,proto3" json:"sync_flow,omitempty"`
	AdvertiserId string `protobuf:"bytes,8,opt,name=advertiser_id,json=advertiserId,proto3" json:"advertiser_id,omitempty"`
	AppId        string `protobuf:"bytes,9,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *CampaignCreateReq) Reset() {
	*x = CampaignCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignCreateReq) ProtoMessage() {}

func (x *CampaignCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignCreateReq.ProtoReflect.Descriptor instead.
func (*CampaignCreateReq) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{0}
}

func (x *CampaignCreateReq) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *CampaignCreateReq) GetCampaignName() string {
	if x != nil {
		return x.CampaignName
	}
	return ""
}

func (x *CampaignCreateReq) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *CampaignCreateReq) GetDailyBudget() int64 {
	if x != nil {
		return x.DailyBudget
	}
	return 0
}

func (x *CampaignCreateReq) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CampaignCreateReq) GetCampaignType() string {
	if x != nil {
		return x.CampaignType
	}
	return ""
}

func (x *CampaignCreateReq) GetSyncFlow() string {
	if x != nil {
		return x.SyncFlow
	}
	return ""
}

func (x *CampaignCreateReq) GetAdvertiserId() string {
	if x != nil {
		return x.AdvertiserId
	}
	return ""
}

func (x *CampaignCreateReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type CampaignUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignId   string `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	CampaignName string `protobuf:"bytes,2,opt,name=campaign_name,json=campaignName,proto3" json:"campaign_name,omitempty"`
	ProductType  string `protobuf:"bytes,3,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	DailyBudget  int64  `protobuf:"varint,4,opt,name=daily_budget,json=dailyBudget,proto3" json:"daily_budget,omitempty"`
}

func (x *CampaignUpdateReq) Reset() {
	*x = CampaignUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignUpdateReq) ProtoMessage() {}

func (x *CampaignUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignUpdateReq.ProtoReflect.Descriptor instead.
func (*CampaignUpdateReq) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{1}
}

func (x *CampaignUpdateReq) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *CampaignUpdateReq) GetCampaignName() string {
	if x != nil {
		return x.CampaignName
	}
	return ""
}

func (x *CampaignUpdateReq) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *CampaignUpdateReq) GetDailyBudget() int64 {
	if x != nil {
		return x.DailyBudget
	}
	return 0
}

type CampaignListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId        string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	CampaignId   string `protobuf:"bytes,2,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	CampaignName string `protobuf:"bytes,3,opt,name=campaign_name,json=campaignName,proto3" json:"campaign_name,omitempty"`
	CampaignType string `protobuf:"bytes,4,opt,name=campaign_type,json=campaignType,proto3" json:"campaign_type,omitempty"`
	Page         int64  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize     int64  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *CampaignListReq) Reset() {
	*x = CampaignListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignListReq) ProtoMessage() {}

func (x *CampaignListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignListReq.ProtoReflect.Descriptor instead.
func (*CampaignListReq) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{2}
}

func (x *CampaignListReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *CampaignListReq) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *CampaignListReq) GetCampaignName() string {
	if x != nil {
		return x.CampaignName
	}
	return ""
}

func (x *CampaignListReq) GetCampaignType() string {
	if x != nil {
		return x.CampaignType
	}
	return ""
}

func (x *CampaignListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CampaignListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type CampaignListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campaigns []*CampaignInfo `protobuf:"bytes,1,rep,name=Campaigns,proto3" json:"Campaigns,omitempty"`
	Total     int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CampaignListResp) Reset() {
	*x = CampaignListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignListResp) ProtoMessage() {}

func (x *CampaignListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignListResp.ProtoReflect.Descriptor instead.
func (*CampaignListResp) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{3}
}

func (x *CampaignListResp) GetCampaigns() []*CampaignInfo {
	if x != nil {
		return x.Campaigns
	}
	return nil
}

func (x *CampaignListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CampaignInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignId string `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
}

func (x *CampaignInfoReq) Reset() {
	*x = CampaignInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignInfoReq) ProtoMessage() {}

func (x *CampaignInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignInfoReq.ProtoReflect.Descriptor instead.
func (*CampaignInfoReq) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{4}
}

func (x *CampaignInfoReq) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

type CampaignInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CampaignId                string `protobuf:"bytes,2,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	CampaignName              string `protobuf:"bytes,3,opt,name=campaign_name,json=campaignName,proto3" json:"campaign_name,omitempty"`
	AccountId                 int64  `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AdvertiserId              string `protobuf:"bytes,5,opt,name=advertiser_id,json=advertiserId,proto3" json:"advertiser_id,omitempty"`
	OptStatus                 string `protobuf:"bytes,6,opt,name=opt_status,json=optStatus,proto3" json:"opt_status,omitempty"`
	CampaignDailyBudgetStatus string `protobuf:"bytes,7,opt,name=campaign_daily_budget_status,json=campaignDailyBudgetStatus,proto3" json:"campaign_daily_budget_status,omitempty"`
	ProductType               string `protobuf:"bytes,8,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	ShowStatus                string `protobuf:"bytes,9,opt,name=show_status,json=showStatus,proto3" json:"show_status,omitempty"`
	UserBalanceStatus         string `protobuf:"bytes,10,opt,name=user_balance_status,json=userBalanceStatus,proto3" json:"user_balance_status,omitempty"`
	FlowResource              string `protobuf:"bytes,11,opt,name=flow_resource,json=flowResource,proto3" json:"flow_resource,omitempty"`
	SyncFlowResource          string `protobuf:"bytes,12,opt,name=sync_flow_resource,json=syncFlowResource,proto3" json:"sync_flow_resource,omitempty"`
	CampaignType              string `protobuf:"bytes,13,opt,name=campaign_type,json=campaignType,proto3" json:"campaign_type,omitempty"`
	TodayDailyBudget          int64  `protobuf:"varint,14,opt,name=today_daily_budget,json=todayDailyBudget,proto3" json:"today_daily_budget,omitempty"`
	TomorrowDailyBudget       int64  `protobuf:"varint,15,opt,name=tomorrow_daily_budget,json=tomorrowDailyBudget,proto3" json:"tomorrow_daily_budget,omitempty"`
	MarketingGoal             string `protobuf:"bytes,16,opt,name=marketing_goal,json=marketingGoal,proto3" json:"marketing_goal,omitempty"`
	IsCallback                int64  `protobuf:"varint,17,opt,name=is_callback,json=isCallback,proto3" json:"is_callback,omitempty"`
	CreatedAt                 int64  `protobuf:"varint,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                 int64  `protobuf:"varint,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	AppId                     string `protobuf:"bytes,20,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *CampaignInfo) Reset() {
	*x = CampaignInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignInfo) ProtoMessage() {}

func (x *CampaignInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignInfo.ProtoReflect.Descriptor instead.
func (*CampaignInfo) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{5}
}

func (x *CampaignInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CampaignInfo) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *CampaignInfo) GetCampaignName() string {
	if x != nil {
		return x.CampaignName
	}
	return ""
}

func (x *CampaignInfo) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CampaignInfo) GetAdvertiserId() string {
	if x != nil {
		return x.AdvertiserId
	}
	return ""
}

func (x *CampaignInfo) GetOptStatus() string {
	if x != nil {
		return x.OptStatus
	}
	return ""
}

func (x *CampaignInfo) GetCampaignDailyBudgetStatus() string {
	if x != nil {
		return x.CampaignDailyBudgetStatus
	}
	return ""
}

func (x *CampaignInfo) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *CampaignInfo) GetShowStatus() string {
	if x != nil {
		return x.ShowStatus
	}
	return ""
}

func (x *CampaignInfo) GetUserBalanceStatus() string {
	if x != nil {
		return x.UserBalanceStatus
	}
	return ""
}

func (x *CampaignInfo) GetFlowResource() string {
	if x != nil {
		return x.FlowResource
	}
	return ""
}

func (x *CampaignInfo) GetSyncFlowResource() string {
	if x != nil {
		return x.SyncFlowResource
	}
	return ""
}

func (x *CampaignInfo) GetCampaignType() string {
	if x != nil {
		return x.CampaignType
	}
	return ""
}

func (x *CampaignInfo) GetTodayDailyBudget() int64 {
	if x != nil {
		return x.TodayDailyBudget
	}
	return 0
}

func (x *CampaignInfo) GetTomorrowDailyBudget() int64 {
	if x != nil {
		return x.TomorrowDailyBudget
	}
	return 0
}

func (x *CampaignInfo) GetMarketingGoal() string {
	if x != nil {
		return x.MarketingGoal
	}
	return ""
}

func (x *CampaignInfo) GetIsCallback() int64 {
	if x != nil {
		return x.IsCallback
	}
	return 0
}

func (x *CampaignInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CampaignInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *CampaignInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type DictionaryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictKey []string `protobuf:"bytes,1,rep,name=dict_key,json=dictKey,proto3" json:"dict_key,omitempty"`
	Value   []string `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *DictionaryReq) Reset() {
	*x = DictionaryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryReq) ProtoMessage() {}

func (x *DictionaryReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryReq.ProtoReflect.Descriptor instead.
func (*DictionaryReq) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{6}
}

func (x *DictionaryReq) GetDictKey() []string {
	if x != nil {
		return x.DictKey
	}
	return nil
}

func (x *DictionaryReq) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type DictionaryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dictionaries []*DictionaryResp_Dictionary `protobuf:"bytes,1,rep,name=Dictionaries,proto3" json:"Dictionaries,omitempty"`
}

func (x *DictionaryResp) Reset() {
	*x = DictionaryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryResp) ProtoMessage() {}

func (x *DictionaryResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryResp.ProtoReflect.Descriptor instead.
func (*DictionaryResp) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{7}
}

func (x *DictionaryResp) GetDictionaries() []*DictionaryResp_Dictionary {
	if x != nil {
		return x.Dictionaries
	}
	return nil
}

type CountriesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Countries []*CountriesResp_OverseasRegionCountry `protobuf:"bytes,1,rep,name=countries,proto3" json:"countries,omitempty"`
}

func (x *CountriesResp) Reset() {
	*x = CountriesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountriesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountriesResp) ProtoMessage() {}

func (x *CountriesResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountriesResp.ProtoReflect.Descriptor instead.
func (*CountriesResp) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{8}
}

func (x *CountriesResp) GetCountries() []*CountriesResp_OverseasRegionCountry {
	if x != nil {
		return x.Countries
	}
	return nil
}

type ContinentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Continents []*ContinentResp_Continent `protobuf:"bytes,1,rep,name=continents,proto3" json:"continents,omitempty"`
}

func (x *ContinentResp) Reset() {
	*x = ContinentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinentResp) ProtoMessage() {}

func (x *ContinentResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinentResp.ProtoReflect.Descriptor instead.
func (*ContinentResp) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{9}
}

func (x *ContinentResp) GetContinents() []*ContinentResp_Continent {
	if x != nil {
		return x.Continents
	}
	return nil
}

type GetTargetingByNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetingName string `protobuf:"bytes,1,opt,name=targeting_name,json=targetingName,proto3" json:"targeting_name,omitempty"`
}

func (x *GetTargetingByNameReq) Reset() {
	*x = GetTargetingByNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTargetingByNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetingByNameReq) ProtoMessage() {}

func (x *GetTargetingByNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetingByNameReq.ProtoReflect.Descriptor instead.
func (*GetTargetingByNameReq) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{10}
}

func (x *GetTargetingByNameReq) GetTargetingName() string {
	if x != nil {
		return x.TargetingName
	}
	return ""
}

type GetTargetingByTargetingIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetingId int64 `protobuf:"varint,1,opt,name=targeting_id,json=targetingId,proto3" json:"targeting_id,omitempty"`
}

func (x *GetTargetingByTargetingIdReq) Reset() {
	*x = GetTargetingByTargetingIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTargetingByTargetingIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetingByTargetingIdReq) ProtoMessage() {}

func (x *GetTargetingByTargetingIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetingByTargetingIdReq.ProtoReflect.Descriptor instead.
func (*GetTargetingByTargetingIdReq) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{11}
}

func (x *GetTargetingByTargetingIdReq) GetTargetingId() int64 {
	if x != nil {
		return x.TargetingId
	}
	return 0
}

type Targeting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId          int64  `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AdvertiserId       string `protobuf:"bytes,3,opt,name=advertiser_id,json=advertiserId,proto3" json:"advertiser_id,omitempty"`
	TargetingId        int64  `protobuf:"varint,4,opt,name=targeting_id,json=targetingId,proto3" json:"targeting_id,omitempty"`
	TargetingName      string `protobuf:"bytes,5,opt,name=targeting_name,json=targetingName,proto3" json:"targeting_name,omitempty"`
	TargetingType      string `protobuf:"bytes,6,opt,name=targeting_type,json=targetingType,proto3" json:"targeting_type,omitempty"`
	LocationType       string `protobuf:"bytes,7,opt,name=location_type,json=locationType,proto3" json:"location_type,omitempty"`
	IncludeLocation    string `protobuf:"bytes,8,opt,name=include_location,json=includeLocation,proto3" json:"include_location,omitempty"`
	ExcludeLocation    string `protobuf:"bytes,9,opt,name=exclude_location,json=excludeLocation,proto3" json:"exclude_location,omitempty"`
	Carriers           string `protobuf:"bytes,10,opt,name=carriers,proto3" json:"carriers,omitempty"`
	Language           string `protobuf:"bytes,11,opt,name=language,proto3" json:"language,omitempty"`
	Age                string `protobuf:"bytes,12,opt,name=age,proto3" json:"age,omitempty"`
	Gender             string `protobuf:"bytes,13,opt,name=gender,proto3" json:"gender,omitempty"`
	AppCategory        string `protobuf:"bytes,14,opt,name=app_category,json=appCategory,proto3" json:"app_category,omitempty"`
	AppCategories      string `protobuf:"bytes,15,opt,name=app_categories,json=appCategories,proto3" json:"app_categories,omitempty"`
	InstalledApps      string `protobuf:"bytes,16,opt,name=installed_apps,json=installedApps,proto3" json:"installed_apps,omitempty"`
	AppInterest        string `protobuf:"bytes,17,opt,name=app_interest,json=appInterest,proto3" json:"app_interest,omitempty"`
	AppInterests       string `protobuf:"bytes,18,opt,name=app_interests,json=appInterests,proto3" json:"app_interests,omitempty"`
	Series             string `protobuf:"bytes,19,opt,name=series,proto3" json:"series,omitempty"`
	NetworkType        string `protobuf:"bytes,20,opt,name=network_type,json=networkType,proto3" json:"network_type,omitempty"`
	NotAudiences       string `protobuf:"bytes,21,opt,name=not_audiences,json=notAudiences,proto3" json:"not_audiences,omitempty"`
	Audiences          string `protobuf:"bytes,22,opt,name=audiences,proto3" json:"audiences,omitempty"`
	AppCategoryOfMedia string `protobuf:"bytes,23,opt,name=app_category_of_media,json=appCategoryOfMedia,proto3" json:"app_category_of_media,omitempty"`
	CreatedAt          int64  `protobuf:"varint,24,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          int64  `protobuf:"varint,25,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Targeting) Reset() {
	*x = Targeting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Targeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Targeting) ProtoMessage() {}

func (x *Targeting) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Targeting.ProtoReflect.Descriptor instead.
func (*Targeting) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{12}
}

func (x *Targeting) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Targeting) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Targeting) GetAdvertiserId() string {
	if x != nil {
		return x.AdvertiserId
	}
	return ""
}

func (x *Targeting) GetTargetingId() int64 {
	if x != nil {
		return x.TargetingId
	}
	return 0
}

func (x *Targeting) GetTargetingName() string {
	if x != nil {
		return x.TargetingName
	}
	return ""
}

func (x *Targeting) GetTargetingType() string {
	if x != nil {
		return x.TargetingType
	}
	return ""
}

func (x *Targeting) GetLocationType() string {
	if x != nil {
		return x.LocationType
	}
	return ""
}

func (x *Targeting) GetIncludeLocation() string {
	if x != nil {
		return x.IncludeLocation
	}
	return ""
}

func (x *Targeting) GetExcludeLocation() string {
	if x != nil {
		return x.ExcludeLocation
	}
	return ""
}

func (x *Targeting) GetCarriers() string {
	if x != nil {
		return x.Carriers
	}
	return ""
}

func (x *Targeting) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Targeting) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *Targeting) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Targeting) GetAppCategory() string {
	if x != nil {
		return x.AppCategory
	}
	return ""
}

func (x *Targeting) GetAppCategories() string {
	if x != nil {
		return x.AppCategories
	}
	return ""
}

func (x *Targeting) GetInstalledApps() string {
	if x != nil {
		return x.InstalledApps
	}
	return ""
}

func (x *Targeting) GetAppInterest() string {
	if x != nil {
		return x.AppInterest
	}
	return ""
}

func (x *Targeting) GetAppInterests() string {
	if x != nil {
		return x.AppInterests
	}
	return ""
}

func (x *Targeting) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *Targeting) GetNetworkType() string {
	if x != nil {
		return x.NetworkType
	}
	return ""
}

func (x *Targeting) GetNotAudiences() string {
	if x != nil {
		return x.NotAudiences
	}
	return ""
}

func (x *Targeting) GetAudiences() string {
	if x != nil {
		return x.Audiences
	}
	return ""
}

func (x *Targeting) GetAppCategoryOfMedia() string {
	if x != nil {
		return x.AppCategoryOfMedia
	}
	return ""
}

func (x *Targeting) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Targeting) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type TargetingListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *TargetingListReq) Reset() {
	*x = TargetingListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetingListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetingListReq) ProtoMessage() {}

func (x *TargetingListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetingListReq.ProtoReflect.Descriptor instead.
func (*TargetingListReq) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{13}
}

func (x *TargetingListReq) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type TargetingListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targetings []*Targeting `protobuf:"bytes,1,rep,name=targetings,proto3" json:"targetings,omitempty"`
}

func (x *TargetingListResp) Reset() {
	*x = TargetingListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetingListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetingListResp) ProtoMessage() {}

func (x *TargetingListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetingListResp.ProtoReflect.Descriptor instead.
func (*TargetingListResp) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{14}
}

func (x *TargetingListResp) GetTargetings() []*Targeting {
	if x != nil {
		return x.Targetings
	}
	return nil
}

type CreativeSizeSample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreativeSizeSample string `protobuf:"bytes,1,opt,name=creative_size_sample,json=creativeSizeSample,proto3" json:"creative_size_sample,omitempty"`
	PreviewTitle       string `protobuf:"bytes,2,opt,name=preview_title,json=previewTitle,proto3" json:"preview_title,omitempty"`
}

func (x *CreativeSizeSample) Reset() {
	*x = CreativeSizeSample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreativeSizeSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreativeSizeSample) ProtoMessage() {}

func (x *CreativeSizeSample) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreativeSizeSample.ProtoReflect.Descriptor instead.
func (*CreativeSizeSample) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{15}
}

func (x *CreativeSizeSample) GetCreativeSizeSample() string {
	if x != nil {
		return x.CreativeSizeSample
	}
	return ""
}

func (x *CreativeSizeSample) GetPreviewTitle() string {
	if x != nil {
		return x.PreviewTitle
	}
	return ""
}

type CreativeSizePlacement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlacementSizeId     string `protobuf:"bytes,1,opt,name=placement_size_id,json=placementSizeId,proto3" json:"placement_size_id,omitempty"`
	CreativeSize        string `protobuf:"bytes,2,opt,name=creative_size,json=creativeSize,proto3" json:"creative_size,omitempty"`
	CreativeSizeSubType string `protobuf:"bytes,3,opt,name=creative_size_sub_type,json=creativeSizeSubType,proto3" json:"creative_size_sub_type,omitempty"`
}

func (x *CreativeSizePlacement) Reset() {
	*x = CreativeSizePlacement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreativeSizePlacement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreativeSizePlacement) ProtoMessage() {}

func (x *CreativeSizePlacement) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreativeSizePlacement.ProtoReflect.Descriptor instead.
func (*CreativeSizePlacement) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{16}
}

func (x *CreativeSizePlacement) GetPlacementSizeId() string {
	if x != nil {
		return x.PlacementSizeId
	}
	return ""
}

func (x *CreativeSizePlacement) GetCreativeSize() string {
	if x != nil {
		return x.CreativeSize
	}
	return ""
}

func (x *CreativeSizePlacement) GetCreativeSizeSubType() string {
	if x != nil {
		return x.CreativeSizeSubType
	}
	return ""
}

type CreativeSizeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreativeSizeId             int64                    `protobuf:"varint,1,opt,name=creative_size_id,json=creativeSizeId,proto3" json:"creative_size_id,omitempty"`
	CreativeSizeNameDsp        string                   `protobuf:"bytes,2,opt,name=creative_size_name_dsp,json=creativeSizeNameDsp,proto3" json:"creative_size_name_dsp,omitempty"`
	CreativeSizeDescription    string                   `protobuf:"bytes,3,opt,name=creative_size_description,json=creativeSizeDescription,proto3" json:"creative_size_description,omitempty"`
	CreativeSizeSampleList     []*CreativeSizeSample    `protobuf:"bytes,4,rep,name=creative_size_sample_list,json=creativeSizeSampleList,proto3" json:"creative_size_sample_list,omitempty"`
	CreativeSizePlacementList  []*CreativeSizePlacement `protobuf:"bytes,5,rep,name=creative_size_placement_list,json=creativeSizePlacementList,proto3" json:"creative_size_placement_list,omitempty"`
	SupportProductType         string                   `protobuf:"bytes,6,opt,name=support_product_type,json=supportProductType,proto3" json:"support_product_type,omitempty"`
	SupportObjectiveType       string                   `protobuf:"bytes,7,opt,name=support_objective_type,json=supportObjectiveType,proto3" json:"support_objective_type,omitempty"`
	IsSupportTimePeriod        string                   `protobuf:"bytes,8,opt,name=is_support_time_period,json=isSupportTimePeriod,proto3" json:"is_support_time_period,omitempty"`
	IsSupportMultipleCreatives string                   `protobuf:"bytes,9,opt,name=is_support_multiple_creatives,json=isSupportMultipleCreatives,proto3" json:"is_support_multiple_creatives,omitempty"`
	SupportPriceType           string                   `protobuf:"bytes,10,opt,name=support_price_type,json=supportPriceType,proto3" json:"support_price_type,omitempty"`
}

func (x *CreativeSizeInfo) Reset() {
	*x = CreativeSizeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreativeSizeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreativeSizeInfo) ProtoMessage() {}

func (x *CreativeSizeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreativeSizeInfo.ProtoReflect.Descriptor instead.
func (*CreativeSizeInfo) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{17}
}

func (x *CreativeSizeInfo) GetCreativeSizeId() int64 {
	if x != nil {
		return x.CreativeSizeId
	}
	return 0
}

func (x *CreativeSizeInfo) GetCreativeSizeNameDsp() string {
	if x != nil {
		return x.CreativeSizeNameDsp
	}
	return ""
}

func (x *CreativeSizeInfo) GetCreativeSizeDescription() string {
	if x != nil {
		return x.CreativeSizeDescription
	}
	return ""
}

func (x *CreativeSizeInfo) GetCreativeSizeSampleList() []*CreativeSizeSample {
	if x != nil {
		return x.CreativeSizeSampleList
	}
	return nil
}

func (x *CreativeSizeInfo) GetCreativeSizePlacementList() []*CreativeSizePlacement {
	if x != nil {
		return x.CreativeSizePlacementList
	}
	return nil
}

func (x *CreativeSizeInfo) GetSupportProductType() string {
	if x != nil {
		return x.SupportProductType
	}
	return ""
}

func (x *CreativeSizeInfo) GetSupportObjectiveType() string {
	if x != nil {
		return x.SupportObjectiveType
	}
	return ""
}

func (x *CreativeSizeInfo) GetIsSupportTimePeriod() string {
	if x != nil {
		return x.IsSupportTimePeriod
	}
	return ""
}

func (x *CreativeSizeInfo) GetIsSupportMultipleCreatives() string {
	if x != nil {
		return x.IsSupportMultipleCreatives
	}
	return ""
}

func (x *CreativeSizeInfo) GetSupportPriceType() string {
	if x != nil {
		return x.SupportPriceType
	}
	return ""
}

type PositionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category  string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	AccountId int64  `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *PositionListReq) Reset() {
	*x = PositionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionListReq) ProtoMessage() {}

func (x *PositionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionListReq.ProtoReflect.Descriptor instead.
func (*PositionListReq) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{18}
}

func (x *PositionListReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PositionListReq) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type PositionListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreativeSizeInfoList []*CreativeSizeInfo `protobuf:"bytes,1,rep,name=creative_size_info_list,json=creativeSizeInfoList,proto3" json:"creative_size_info_list,omitempty"`
}

func (x *PositionListResp) Reset() {
	*x = PositionListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionListResp) ProtoMessage() {}

func (x *PositionListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionListResp.ProtoReflect.Descriptor instead.
func (*PositionListResp) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{19}
}

func (x *PositionListResp) GetCreativeSizeInfoList() []*CreativeSizeInfo {
	if x != nil {
		return x.CreativeSizeInfoList
	}
	return nil
}

type EmptyParamsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyParamsReq) Reset() {
	*x = EmptyParamsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyParamsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyParamsReq) ProtoMessage() {}

func (x *EmptyParamsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyParamsReq.ProtoReflect.Descriptor instead.
func (*EmptyParamsReq) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{20}
}

type BaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BaseResp) Reset() {
	*x = BaseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResp) ProtoMessage() {}

func (x *BaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResp.ProtoReflect.Descriptor instead.
func (*BaseResp) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{21}
}

type DictionaryResp_Dictionary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictKey    string `protobuf:"bytes,1,opt,name=dict_key,json=dictKey,proto3" json:"dict_key,omitempty"`
	Id         string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Pid        string `protobuf:"bytes,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Label      string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Value      string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Code       string `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	Seq        string `protobuf:"bytes,7,opt,name=seq,proto3" json:"seq,omitempty"`
	DataStruct int64  `protobuf:"varint,8,opt,name=data_struct,json=dataStruct,proto3" json:"data_struct,omitempty"`
}

func (x *DictionaryResp_Dictionary) Reset() {
	*x = DictionaryResp_Dictionary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryResp_Dictionary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryResp_Dictionary) ProtoMessage() {}

func (x *DictionaryResp_Dictionary) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryResp_Dictionary.ProtoReflect.Descriptor instead.
func (*DictionaryResp_Dictionary) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{7, 0}
}

func (x *DictionaryResp_Dictionary) GetDictKey() string {
	if x != nil {
		return x.DictKey
	}
	return ""
}

func (x *DictionaryResp_Dictionary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DictionaryResp_Dictionary) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *DictionaryResp_Dictionary) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DictionaryResp_Dictionary) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DictionaryResp_Dictionary) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DictionaryResp_Dictionary) GetSeq() string {
	if x != nil {
		return x.Seq
	}
	return ""
}

func (x *DictionaryResp_Dictionary) GetDataStruct() int64 {
	if x != nil {
		return x.DataStruct
	}
	return 0
}

type CountriesResp_OverseasRegionCountry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CId         string `protobuf:"bytes,1,opt,name=c_id,json=cId,proto3" json:"c_id,omitempty"`
	Pid         string `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`
	CName       string `protobuf:"bytes,3,opt,name=c_name,json=cName,proto3" json:"c_name,omitempty"`
	CCode       string `protobuf:"bytes,4,opt,name=c_code,json=cCode,proto3" json:"c_code,omitempty"`
	Level       int64  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	ContinentId int64  `protobuf:"varint,6,opt,name=continent_id,json=continentId,proto3" json:"continent_id,omitempty"`
}

func (x *CountriesResp_OverseasRegionCountry) Reset() {
	*x = CountriesResp_OverseasRegionCountry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountriesResp_OverseasRegionCountry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountriesResp_OverseasRegionCountry) ProtoMessage() {}

func (x *CountriesResp_OverseasRegionCountry) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountriesResp_OverseasRegionCountry.ProtoReflect.Descriptor instead.
func (*CountriesResp_OverseasRegionCountry) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CountriesResp_OverseasRegionCountry) GetCId() string {
	if x != nil {
		return x.CId
	}
	return ""
}

func (x *CountriesResp_OverseasRegionCountry) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *CountriesResp_OverseasRegionCountry) GetCName() string {
	if x != nil {
		return x.CName
	}
	return ""
}

func (x *CountriesResp_OverseasRegionCountry) GetCCode() string {
	if x != nil {
		return x.CCode
	}
	return ""
}

func (x *CountriesResp_OverseasRegionCountry) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CountriesResp_OverseasRegionCountry) GetContinentId() int64 {
	if x != nil {
		return x.ContinentId
	}
	return 0
}

type ContinentResp_Continent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CName string `protobuf:"bytes,2,opt,name=c_name,json=cName,proto3" json:"c_name,omitempty"`
}

func (x *ContinentResp_Continent) Reset() {
	*x = ContinentResp_Continent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_marketing_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinentResp_Continent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinentResp_Continent) ProtoMessage() {}

func (x *ContinentResp_Continent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_marketing_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinentResp_Continent.ProtoReflect.Descriptor instead.
func (*ContinentResp_Continent) Descriptor() ([]byte, []int) {
	return file_pb_marketing_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ContinentResp_Continent) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ContinentResp_Continent) GetCName() string {
	if x != nil {
		return x.CName
	}
	return ""
}

var File_pb_marketing_proto protoreflect.FileDescriptor

var file_pb_marketing_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x62, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x22,
	0xbc, 0x02, 0x0a, 0x11, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x46, 0x6c,
	0x6f, 0x77, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x9f,
	0x01, 0x0a, 0x11, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x22, 0xc4, 0x01, 0x0a, 0x0f, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x5f, 0x0a, 0x10, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x09, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x32, 0x0a, 0x0f, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x22, 0xf3, 0x05, 0x0a,
	0x0c, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x79,
	0x6e, 0x63, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x6f, 0x6d, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x5f, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x13, 0x74, 0x6f, 0x6d, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x22, 0x40, 0x0a, 0x0d, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x99, 0x02, 0x0a, 0x0e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0c, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x79, 0x52, 0x0c, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x1a, 0xbc, 0x01, 0x0a, 0x0a, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x22, 0x83, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4c, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x4f, 0x76, 0x65, 0x72, 0x73, 0x65, 0x61, 0x73, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x1a, 0xa3, 0x01, 0x0a, 0x15, 0x4f, 0x76, 0x65, 0x72, 0x73, 0x65, 0x61, 0x73, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x11, 0x0a, 0x04, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x32, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x3e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x41, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x22, 0xd5, 0x06, 0x0a, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x41, 0x70, 0x70, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x70, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x5f, 0x61,
	0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6e, 0x6f, 0x74, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x70,
	0x70, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x70, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x31, 0x0a, 0x10, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x49,
	0x0a, 0x11, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x6b, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x53,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf8, 0x04, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x73, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x44, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x61, 0x0a, 0x1c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x69,
	0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x73, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x41, 0x0a, 0x1d, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x69, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x4c, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x66, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x22, 0x0a, 0x0a, 0x08, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0xf3, 0x06, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0e, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47,
	0x0a, 0x0c, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0e, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x09, 0x44, 0x69, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c,
	0x0a, 0x0f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x5a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x27, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0d, 0x5a, 0x0b, 0x2e,
	0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pb_marketing_proto_rawDescOnce sync.Once
	file_pb_marketing_proto_rawDescData = file_pb_marketing_proto_rawDesc
)

func file_pb_marketing_proto_rawDescGZIP() []byte {
	file_pb_marketing_proto_rawDescOnce.Do(func() {
		file_pb_marketing_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_marketing_proto_rawDescData)
	})
	return file_pb_marketing_proto_rawDescData
}

var file_pb_marketing_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_pb_marketing_proto_goTypes = []interface{}{
	(*CampaignCreateReq)(nil),                   // 0: marketing.CampaignCreateReq
	(*CampaignUpdateReq)(nil),                   // 1: marketing.CampaignUpdateReq
	(*CampaignListReq)(nil),                     // 2: marketing.CampaignListReq
	(*CampaignListResp)(nil),                    // 3: marketing.CampaignListResp
	(*CampaignInfoReq)(nil),                     // 4: marketing.CampaignInfoReq
	(*CampaignInfo)(nil),                        // 5: marketing.CampaignInfo
	(*DictionaryReq)(nil),                       // 6: marketing.DictionaryReq
	(*DictionaryResp)(nil),                      // 7: marketing.DictionaryResp
	(*CountriesResp)(nil),                       // 8: marketing.CountriesResp
	(*ContinentResp)(nil),                       // 9: marketing.ContinentResp
	(*GetTargetingByNameReq)(nil),               // 10: marketing.GetTargetingByNameReq
	(*GetTargetingByTargetingIdReq)(nil),        // 11: marketing.GetTargetingByTargetingIdReq
	(*Targeting)(nil),                           // 12: marketing.Targeting
	(*TargetingListReq)(nil),                    // 13: marketing.TargetingListReq
	(*TargetingListResp)(nil),                   // 14: marketing.TargetingListResp
	(*CreativeSizeSample)(nil),                  // 15: marketing.CreativeSizeSample
	(*CreativeSizePlacement)(nil),               // 16: marketing.CreativeSizePlacement
	(*CreativeSizeInfo)(nil),                    // 17: marketing.CreativeSizeInfo
	(*PositionListReq)(nil),                     // 18: marketing.PositionListReq
	(*PositionListResp)(nil),                    // 19: marketing.PositionListResp
	(*EmptyParamsReq)(nil),                      // 20: marketing.EmptyParamsReq
	(*BaseResp)(nil),                            // 21: marketing.BaseResp
	(*DictionaryResp_Dictionary)(nil),           // 22: marketing.DictionaryResp.Dictionary
	(*CountriesResp_OverseasRegionCountry)(nil), // 23: marketing.CountriesResp.OverseasRegionCountry
	(*ContinentResp_Continent)(nil),             // 24: marketing.ContinentResp.Continent
}
var file_pb_marketing_proto_depIdxs = []int32{
	5,  // 0: marketing.CampaignListResp.Campaigns:type_name -> marketing.CampaignInfo
	22, // 1: marketing.DictionaryResp.Dictionaries:type_name -> marketing.DictionaryResp.Dictionary
	23, // 2: marketing.CountriesResp.countries:type_name -> marketing.CountriesResp.OverseasRegionCountry
	24, // 3: marketing.ContinentResp.continents:type_name -> marketing.ContinentResp.Continent
	12, // 4: marketing.TargetingListResp.targetings:type_name -> marketing.Targeting
	15, // 5: marketing.CreativeSizeInfo.creative_size_sample_list:type_name -> marketing.CreativeSizeSample
	16, // 6: marketing.CreativeSizeInfo.creative_size_placement_list:type_name -> marketing.CreativeSizePlacement
	17, // 7: marketing.PositionListResp.creative_size_info_list:type_name -> marketing.CreativeSizeInfo
	0,  // 8: marketing.MarketingCenter.CampaignCreate:input_type -> marketing.CampaignCreateReq
	2,  // 9: marketing.MarketingCenter.CampaignList:input_type -> marketing.CampaignListReq
	1,  // 10: marketing.MarketingCenter.CampaignUpdate:input_type -> marketing.CampaignUpdateReq
	4,  // 11: marketing.MarketingCenter.GetCampaignInfo:input_type -> marketing.CampaignInfoReq
	6,  // 12: marketing.MarketingCenter.DictQuery:input_type -> marketing.DictionaryReq
	20, // 13: marketing.MarketingCenter.Continents:input_type -> marketing.EmptyParamsReq
	20, // 14: marketing.MarketingCenter.GetCountries:input_type -> marketing.EmptyParamsReq
	12, // 15: marketing.MarketingCenter.TargetingCreate:input_type -> marketing.Targeting
	13, // 16: marketing.MarketingCenter.TargetingList:input_type -> marketing.TargetingListReq
	10, // 17: marketing.MarketingCenter.GetTargetingByName:input_type -> marketing.GetTargetingByNameReq
	11, // 18: marketing.MarketingCenter.GetTargetingByTargetingId:input_type -> marketing.GetTargetingByTargetingIdReq
	18, // 19: marketing.MarketingCenter.GetPositions:input_type -> marketing.PositionListReq
	21, // 20: marketing.MarketingCenter.CampaignCreate:output_type -> marketing.BaseResp
	3,  // 21: marketing.MarketingCenter.CampaignList:output_type -> marketing.CampaignListResp
	21, // 22: marketing.MarketingCenter.CampaignUpdate:output_type -> marketing.BaseResp
	5,  // 23: marketing.MarketingCenter.GetCampaignInfo:output_type -> marketing.CampaignInfo
	7,  // 24: marketing.MarketingCenter.DictQuery:output_type -> marketing.DictionaryResp
	9,  // 25: marketing.MarketingCenter.Continents:output_type -> marketing.ContinentResp
	8,  // 26: marketing.MarketingCenter.GetCountries:output_type -> marketing.CountriesResp
	21, // 27: marketing.MarketingCenter.TargetingCreate:output_type -> marketing.BaseResp
	14, // 28: marketing.MarketingCenter.TargetingList:output_type -> marketing.TargetingListResp
	12, // 29: marketing.MarketingCenter.GetTargetingByName:output_type -> marketing.Targeting
	12, // 30: marketing.MarketingCenter.GetTargetingByTargetingId:output_type -> marketing.Targeting
	19, // 31: marketing.MarketingCenter.GetPositions:output_type -> marketing.PositionListResp
	20, // [20:32] is the sub-list for method output_type
	8,  // [8:20] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_pb_marketing_proto_init() }
func file_pb_marketing_proto_init() {
	if File_pb_marketing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_marketing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountriesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContinentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTargetingByNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTargetingByTargetingIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Targeting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetingListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetingListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreativeSizeSample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreativeSizePlacement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreativeSizeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyParamsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryResp_Dictionary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountriesResp_OverseasRegionCountry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_marketing_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContinentResp_Continent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_marketing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_marketing_proto_goTypes,
		DependencyIndexes: file_pb_marketing_proto_depIdxs,
		MessageInfos:      file_pb_marketing_proto_msgTypes,
	}.Build()
	File_pb_marketing_proto = out.File
	file_pb_marketing_proto_rawDesc = nil
	file_pb_marketing_proto_goTypes = nil
	file_pb_marketing_proto_depIdxs = nil
}
