// Code generated by goctl. DO NOT EDIT!
// Source: marketing.proto

package server

import (
	"context"

	"business/app/marketing/rpc/internal/logic"
	"business/app/marketing/rpc/internal/svc"
	"business/app/marketing/rpc/marketing"
)

type MarketingCenterServer struct {
	svcCtx *svc.ServiceContext
	marketing.UnimplementedMarketingCenterServer
}

func NewMarketingCenterServer(svcCtx *svc.ServiceContext) *MarketingCenterServer {
	return &MarketingCenterServer{
		svcCtx: svcCtx,
	}
}

func (s *MarketingCenterServer) PromotionCreate(ctx context.Context, in *marketing.PromotionCreateReq) (*marketing.BaseResp, error) {
	l := logic.NewPromotionCreateLogic(ctx, s.svcCtx)
	return l.PromotionCreate(in)
}

func (s *MarketingCenterServer) PromotionList(ctx context.Context, in *marketing.PromotionListReq) (*marketing.PromotionListResp, error) {
	l := logic.NewPromotionListLogic(ctx, s.svcCtx)
	return l.PromotionList(in)
}

func (s *MarketingCenterServer) PromotionUpdate(ctx context.Context, in *marketing.PromotionUpdateReq) (*marketing.BaseResp, error) {
	l := logic.NewPromotionUpdateLogic(ctx, s.svcCtx)
	return l.PromotionUpdate(in)
}

func (s *MarketingCenterServer) CampaignInfo(ctx context.Context, in *marketing.CampaignInfoReq) (*marketing.PromotionInfo, error) {
	l := logic.NewCampaignInfoLogic(ctx, s.svcCtx)
	return l.CampaignInfo(in)
}

func (s *MarketingCenterServer) DictQuery(ctx context.Context, in *marketing.DictionaryReq) (*marketing.DictionaryResp, error) {
	l := logic.NewDictQueryLogic(ctx, s.svcCtx)
	return l.DictQuery(in)
}

func (s *MarketingCenterServer) Continents(ctx context.Context, in *marketing.EmptyParamsReq) (*marketing.ContinentResp, error) {
	l := logic.NewContinentsLogic(ctx, s.svcCtx)
	return l.Continents(in)
}

func (s *MarketingCenterServer) GetCountries(ctx context.Context, in *marketing.EmptyParamsReq) (*marketing.CountriesResp, error) {
	l := logic.NewGetCountriesLogic(ctx, s.svcCtx)
	return l.GetCountries(in)
}
