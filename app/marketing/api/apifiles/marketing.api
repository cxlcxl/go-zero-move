syntax = "v1"

import (
	"base.api"
	"campaign.api"
	"targeting.api"
)

type (
	Dictionary {
		Id       string        `json:"id"`
		Pid      string        `json:"pid"`
		Label    string        `json:"label"`
		Value    string        `json:"value"`
		Children []*Dictionary `json:"children"`
	}
	DictReq {
		DictKey string `form:"dict_key"`
	}
	DictResp {
		BaseResp
		Data map[string][]*Dictionary `json:"data"`
	}
	ContinentCountry {
		Continents []*Continent `json:"continents"`
		Countries  []*Country   `json:"countries"`
	}
	Continent {
		Id    int64  `json:"id"`
		CName string `json:"c_name"`
	}
	Country {
		CId         string `json:"c_id"`
		CCode       string `json:"c_code"`
		CName       string `json:"c_name"`
		ContinentId int64  `json:"continent_id"`
	}
	LocationResp {
		BaseResp
		Data ContinentCountry `json:"data"`
	}
)

@server(
	prefix: marketing
	jwt: Auth
	middleware : AuthMiddleware,PermissionMiddleware
)
service marketing-api {
	@doc "计划所需资源"
	@handler campaignResources
	get /campaign/resources returns(CampaignResources)
	
	@doc "创建计划"
	@handler campaignCreate
	post /campaign/create (CampaignCreateReq) returns (CampaignCreateResp)
	
	@doc "计划列表"
	@handler campaignList
	get /campaign/list (CampaignListReq) returns (CampaignListResp)
	
	@doc "字典查询"
	@handler dictionaryQuery
	get /dictionary/query (DictReq) returns (DictResp)
	
	@doc "定向包查询地域"
	@handler targetingLocation
	get /targeting/location returns (LocationResp)
	
	@doc "定向包查询"
	@handler targetingList
	get /targeting/list returns (TargetingListResp)
	
	@doc "创建定向包"
	@handler targetingCreate
	post /targeting/create (TargetingCreateReq) returns (TargetingCreateResp)
	
}